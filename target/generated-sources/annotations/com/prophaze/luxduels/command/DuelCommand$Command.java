package com.prophaze.luxduels.command;

import dev.jorel.commandapi.CommandAPICommand;
import dev.jorel.commandapi.arguments.LiteralArgument;
import dev.jorel.commandapi.arguments.MultiLiteralArgument;
import dev.jorel.commandapi.arguments.PlayerArgument;

import org.bukkit.entity.Player;

// This class was automatically generated by the CommandAPI
public class DuelCommand$Command {

    @SuppressWarnings("unchecked")
    public static void register() {

        new CommandAPICommand("duel")
            .withAliases("duels")
            .executes((sender, args) -> {
                DuelCommand.onBaseCommand(sender);
            })
            .register();

        new CommandAPICommand("duel")
            .withAliases("duels")
            .withArguments(new LiteralArgument("help").setListed(true))
            .executes((sender, args) -> {
                DuelCommand.onHelpCommand(sender, (String) args[0]);
            })
            .register();

        new CommandAPICommand("duel")
            .withAliases("duels")
            .withArguments(new PlayerArgument("target"))
            .withArguments(new MultiLiteralArgument("SHIELD", "NETHERITE", "DIAMOND", "OVERPOWERED", "POTION", "UHC"))
            .executes((sender, args) -> {
                DuelCommand.onDuelCommand(sender, (Player) args[0], (String) args[1]);
            })
            .register();

        new CommandAPICommand("duel")
            .withArguments(
                new MultiLiteralArgument("accept")
                    .setListed(false)
            )
            .withAliases("duels")
            .withArguments(new PlayerArgument("target"))
            .executes((sender, args) -> {
                DuelCommand.onDuelAcceptCommand(sender, (Player) args[0]);
            })
            .register();

        new CommandAPICommand("duel")
            .withArguments(
                new MultiLiteralArgument("leave")
                    .setListed(false)
            )
            .withAliases("duels")
            .executes((sender, args) -> {
                DuelCommand.onLeaveCommand(sender);
            })
            .register();

        }

}
